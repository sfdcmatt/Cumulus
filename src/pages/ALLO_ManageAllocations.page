<apex:page standardController="Allocation__c" recordSetVar="allocations" extensions="ALLO_ManageAllocations_CTRL" title="Manage Allocations" tabStyle="Allocation__c" showHeader="true" sidebar="true" standardStylesheets="false" cache="false" >
    <apex:includeScript value="{!URLFOR($Resource.CumulusStaticResources, '/jquery/jquery-1.10.2.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SLDS, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
        html body.sfdcBody {
            padding: 0;
        }
        input.lookupInput {
            background-color: white;
            background-image: none;
            color: #16325c;
            border: 1px solid #d8dde6;
            border-radius: 4px;
            width: 100%;
            -webkit-transition: border 0.1s linear, background-color 0.1s linear;
            transition: border 0.1s linear, background-color 0.1s linear;
            display: inline-block;
            padding: 0 16px 0 12px;
            line-height: 34px;
            min-height: calc(34px + 2px);
            line-height: normal;
            margin-right: -30px;
        }
    </style>
    <script type="text/javascript">
    (function($) {

        var sumAmount;
        var sumPercent;
        
        var parentAmount = {!parentAmount};
        var dollarSign = '{!$Label.npe01__DefaultContactTransactionCurrency}';
        var defaultEnabled = {!Settings.Default_Allocations_Enabled__c};

        function isLightningExperienceOrSalesforce1() {
            return((typeof sforce != 'undefined') && sforce && (!!sforce.one));
        }

        function urlHome() {
            if (isLightningExperienceOrSalesforce1()) {
                sforce.one.navigateToURL('one.app#/sObject/{!objectAPIName}/home');
            } else {
                window.location.assign('/{!keyPrefix}/o');
            }
        }

        //adds all amount fields together
        var calcAmount = function() {
            sumAmount = 0;
            $('.alloAmount').each(function(i,o){
                var thisRowAmount = $('.amount'+i);
                var thisRowPercent = $('.percent'+i);

                //thisRowAmount.val(thisRowAmount.val().toFixed(2));

                //if amount and percent are blank, enable them both
                if (isBlankOrEmpty(thisRowAmount)){
                    if (isBlankOrEmpty(thisRowPercent)) {
                        //make amount field editable, nulled out
                        thisRowPercent.prop('disabled', false);
                        thisRowAmount.prop('disabled', false);    
                    }
                    
                } else {
                //if amount is full and percent is blank, disable percent
                    if (isBlankOrEmpty(thisRowPercent)) {
                        thisRowPercent.prop('disabled', true);
                    }
                }
                if (!isNaN($(o).val()))
                    sumAmount += Math.round($(o).val()*100);
               
            });

            //write total amount. if we have a parent amount, include the unallocated remainder. 
            //if we're over the parent amount, make it red.
            if (parentAmount > 0) {
                var unallocated = (Math.round((parentAmount*100) - sumAmount)/100).toFixed(2);
                $('#totalAmount').text(dollarSign + unallocated);
                if (unallocated < 0) {
                    $('#totalAmount').css({ "color": "red", "font-weight": "bold" });
                    $('[id$="saveCloseBTN"]').attr('disabled','disabled');
                } else {
                    $('#totalAmount').css({ "color": "black", "font-weight": "normal" });
                    $('[id$="saveCloseBTN"]').removeAttr('disabled');
                }
            } else {
                $('#totalAmount').text(dollarSign + (Math.round(sumAmount)/100).toFixed(2));
            }
            
        }

        //adds all percent fields together
        var calcPercent = function() {
            $('.alloPercent').each(function(i,o){
                //selector variable for each row
                var thisRowAmount = $('.amount'+i);
                var thisRowPercent = $('.percent'+i);

                //grey out amount field if needed
                if (thisRowPercent.val() == '' || !thisRowPercent.val()){
                    //calc amount here if possible
                    thisRowAmount.prop('disabled', false);
                } else {
                    thisRowAmount.prop('disabled', true);
                    //if we have a parent amount, set the calculated amount based on the percent
                    if (parentAmount > 0)
                        thisRowAmount.val((Math.round(thisRowPercent.val() * parentAmount)/100).toFixed(2));
                }
            });
            
        }

        var changePercent = function(i) {
            var thisRowAmount = $('.amount'+i);
            var thisRowPercent = $('.percent'+i);
            if (isBlankOrEmpty(thisRowPercent)) {
                thisRowAmount.val('');
            }
            initOrReload();
        }

        var isBlankOrEmpty = function (selector){
            return (selector.val() == '' || !selector.val());
        }

        var initOrReload = function() {
            calcPercent();
            calcAmount();
        }
        
        //bind functions to window that are needed in the page
        window.initOrReload = initOrReload;
        window.changePercent = changePercent;
        window.urlHome = urlHome;
    })(jQuery);

    </script>
    <apex:form id="theForm">
        <div class="slds">
            <!-- PAGE HEADER -->
            <div class="slds-page-header" role="banner">
                <div class="slds-grid">
                    <div class="slds-col">
                        <nav role="navigation">
                            <p id="bread-crumb-label" class="slds-assistive-text">You are here:</p>
                            <ol class="slds-breadcrumb slds-list--horizontal" aria-labelledby="bread-crumb-label">
                                <li class="slds-list__item slds-text-heading--label">
                                    <a class="slds-type-focus" href="javascript:window.urlHome();">{!objectLabelPlural}</a>
                                </li>
                                <li class="slds-list__item slds-text-heading--label">
                                    <a class="slds-type-focus" href="/{!parentId}">
                                        {!objectName}<apex:outputText rendered="{!parentAmount<>0}" value=" - {0,number,currency}"><apex:param value="{!parentAmount}"/></apex:outputText>
                                    </a>
                                </li>
                            </ol>
                        </nav>              
                        <h1 class="slds-text-heading--medium slds-p-top-medium">{!pageTitle}</h1>
                        <p class="slds-text-body--small slds-m-top--x-small"><apex:outputField value="{!opp.amount}" rendered="opp<>null"/></p>
                    </div>        

                    <div class="slds-col slds-no-flex slds-align-middle">
                        <div class="slds-button-group" role="group">
                            <apex:commandButton styleClass="slds-button slds-button--neutral" action="{!saveClose}" value="{!$Label.alloBtnSaveAndClose}" immediate="false" disabled="{!opp<>null&&parentAmount==0}"/>
                            <apex:commandButton styleClass="slds-button slds-button--neutral" action="{!cancel}" value="{!$Label.alloBtnCancel}"  immediate="true"/>
                        </div>
                    </div>
                </div>
            </div>
            <div> 
                <apex:pageMessages id="messages"/>
            </div>
            <div>
                <table class="allocation-table slds-table slds-table--bordered" >
                    <thead>
                        <tr class="slds-text-heading--label">
                            <th scope="col" width="155px"></th>
                            <th scope="col"><span class="slds-truncate">{!$ObjectType.Allocation__c.Fields.General_Accounting_Unit__c.Label}</span></th>
                            <th scope="col" width="250px"><span class="slds-truncate">{!$ObjectType.Allocation__c.Fields.Amount__c.Label}</span></th>
                            <th scope="col" width="130px"><span class="slds-truncate">{!$ObjectType.Allocation__c.Fields.Percent__c.Label}</span></th>
                            <th scope="col" width="161px"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <apex:variable var="cnt" value="{!0}" /> 
                        <apex:repeat var="allo" value="{!listAllo}" >
                            <tr>
                                <td>
                                    <div class="slds-form-element">
                                        <apex:commandButton styleClass="slds-button slds-button--destructive" value="{!$Label.alloDeleteRow}" id="delRowBTN" title="{!$Label.alloDeleteRow}" action="{!delRow}" reRender="theForm" immediate="true">
                                            <span class="slds-form-element__label slds-assistive-text">Delete Row {!cnt}</span>
                                            <apex:param name="rowForDel" value="{!cnt}" assignTo="{!rowNumber}"/>
                                        </apex:commandButton>
                                    </div>
                                </td>
                                <td>
                                    <div class="slds-form-element">
                                        <label for="alloInputGAU{!cnt}" class="slds-form-element__label slds-assistive-text">{!$ObjectType.Allocation__c.Fields.General_Accounting_Unit__c.Label} {!cnt}</label>
                                        <div id="alloInputGAU{!cnt}" >
                                            <apex:inputField value="{!Allo.General_Accounting_Unit__c}" styleClass="lookupInput"/>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="slds-form-element">
                                        <label for="alloInputAmount{!cnt}" class="slds-form-element__label slds-assistive-text">{!$ObjectType.Allocation__c.Fields.Amount__c.Label} {!cnt}</label>
                                        <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon">
                                            <span class="slds-input__icon">&nbsp;{!$Label.npe01__DefaultContactTransactionCurrency}</span>
                                            <div id="alloInputAmount{!cnt}">
                                                <apex:inputField styleClass="slds-input alloAmount amount{!cnt}" onkeyup="window.initOrReload()"  value="{!Allo.Amount__c}"/>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="slds-form-element">
                                        <label for="alloInputPercent{!cnt}" class="slds-form-element__label slds-assistive-text">{!$ObjectType.Allocation__c.Fields.Percent__c.Label} {!cnt}</label>
                                        <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right">
                                            <div id="alloInputPercent{!cnt}">
                                                <apex:inputField styleClass="slds-input alloPercent percent{!cnt}" onkeyup="window.changePercent({!cnt})" value="{!Allo.Percent__c}"/>
                                            </div>
                                            <span class="slds-input__icon">%</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="slds-form-element">
                                        <apex:commandButton styleClass="slds-button slds-button--neutral" value="{!$Label.alloAddRow}" id="addRowBTN" title="{!$Label.alloAddRow}" action="{!addRow}" reRender="theForm" immediate="true">
                                            <span class="slds-form-element__label slds-assistive-text">{!$Label.alloAddRowAtPosition} {!cnt}</span>
                                            <apex:param name="rowForNew" value="{!cnt}" assignTo="{!rowNumber}"/>
                                        </apex:commandButton>
                                    </div>
                                </td>
                            </tr>
                            <apex:variable var="cnt" value="{!cnt+1}"/>
                        </apex:repeat>
                        <tr class="active">
                            <th scope="row">
                                {!IF(parentAmount>0,$Label.alloRemainder,$Label.alloTotals)}
                            </th>
                            <td>
                                <apex:outputField value="{!defaultAllo.General_Accounting_Unit__c}"/>
                            </td>
                            <td>
                                <div id="totalAmount"></div>
                            </td>
                            <td>
                                <div id="totalPercent"></div>
                            </td>
                            <td>
                                <apex:commandButton styleClass="slds-button slds-button--neutral slds-button--small" value="{!$Label.alloAddRow}" id="addRowBTN" title="{!$Label.alloAddRow}" action="{!addRow}" reRender="theForm" immediate="true" rendered="{!listAlloSize==0}">
                                    <span class="slds-form-element__label slds-assistive-text">{!$Label.alloAddRowAtPosition} {!cnt}</span>
                                    <apex:param name="rowForNew" value="{!cnt}" assignTo="{!rowNumber}"/>
                                </apex:commandButton>
                            </td>
                        </tr>
                   </tbody>
                </table>
                <script>
                    window.initOrReload();
                </script>
            </div>
        </div>
    </apex:form>
</apex:page>